name: Build Android APK
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git python3-pip unzip zlib1g-dev libncurses-dev libffi-dev libssl-dev autoconf libtool pkg-config ccache cmake
        
    - name: Install Python packages
      run: |
        pip install --upgrade pip
        pip install buildozer==1.4.0 cython==0.29.33
        
    - name: Accept Android SDK licenses BEFORE buildozer setup
      working-directory: Android
      run: |
        # Set environment variables for Android SDK location
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/tools/bin:$PATH
        
        # Let buildozer download and setup SDK structure (this will fail at license prompt)
        echo "Triggering buildozer SDK download..."
        set +e # Don't exit on error
        timeout 300 buildozer android debug || echo "Buildozer SDK setup completed (expected failure at license prompt)"
        set -e # Re-enable exit on error
        
        # Now accept licenses with the downloaded SDK (with proper sdk_root)
        echo "Accepting Android SDK licenses..."
        SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
        
        if [ -f $SDK_ROOT/cmdline-tools/latest/bin/sdkmanager ]; then
          echo "Using cmdline-tools sdkmanager..."
          yes | $SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root="$SDK_ROOT" --licenses
        elif [ -f $SDK_ROOT/tools/bin/sdkmanager ]; then
          echo "Using tools sdkmanager..."
          yes | $SDK_ROOT/tools/bin/sdkmanager --sdk_root="$SDK_ROOT" --licenses
        else
          echo "Searching for sdkmanager..."
          SDKMANAGER_PATH=$(find $HOME/.buildozer -name "sdkmanager" -type f 2>/dev/null | head -1)
          if [ -n "$SDKMANAGER_PATH" ]; then
            echo "Found sdkmanager at: $SDKMANAGER_PATH"
            yes | "$SDKMANAGER_PATH" --sdk_root="$SDK_ROOT" --licenses
          else
            echo "No sdkmanager found"
          fi
        fi
        
        # Install specific build tools version to avoid version 36 issues
        echo "Installing specific build-tools version..."
        if [ -f $SDK_ROOT/cmdline-tools/latest/bin/sdkmanager ]; then
          $SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root="$SDK_ROOT" "build-tools;27.0.3" "platform-tools" "platforms;android-27"
        elif [ -f $SDK_ROOT/tools/bin/sdkmanager ]; then
          $SDK_ROOT/tools/bin/sdkmanager --sdk_root="$SDK_ROOT" "build-tools;27.0.3" "platform-tools" "platforms;android-27"
        else
          SDKMANAGER_PATH=$(find $HOME/.buildozer -name "sdkmanager" -type f 2>/dev/null | head -1)
          if [ -n "$SDKMANAGER_PATH" ]; then
            "$SDKMANAGER_PATH" --sdk_root="$SDK_ROOT" "build-tools;27.0.3" "platform-tools" "platforms;android-27"
          fi
        fi
        
        # Verify build-tools installation
        echo "Checking build-tools installation..."
        ls -la "$SDK_ROOT/build-tools/" 2>/dev/null || echo "build-tools directory not found"
        find "$SDK_ROOT" -name "aidl" -type f 2>/dev/null || echo "aidl tool not found"
        
    - name: Build APK with licenses pre-accepted
      working-directory: Android
      run: |
        echo "Building APK with pre-accepted licenses..."
        buildozer android clean
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: android-apk
        path: Android/bin/*.apk