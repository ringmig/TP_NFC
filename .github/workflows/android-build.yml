name: Build Android APK (Docker)
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare buildozer.spec for Docker build
      working-directory: Android
      run: |
        echo "Preparing buildozer.spec for Docker environment..."
        
        # Ensure correct settings for Docker buildozer
        sed -i 's/^android\.api = .*/android.api = 30/' buildozer.spec
        sed -i 's/^android\.ndk = .*/android.ndk = 25b/' buildozer.spec  
        sed -i 's/^android\.minapi = .*/android.minapi = 21/' buildozer.spec
        sed -i 's/^android\.sdk = .*/android.sdk = 30/' buildozer.spec
        sed -i 's/^android\.build_tools = .*/android.build_tools = 30.0.3/' buildozer.spec
        sed -i 's/^android\.archs = .*/android.archs = armeabi-v7a/' buildozer.spec
        
        # Use stable Kivy version
        sed -i 's/^requirements = .*/requirements = python3,kivy==2.1.0/' buildozer.spec
        
        # Enable AndroidX for modern Android builds
        if ! grep -q "android.enable_androidx" buildozer.spec; then
          echo "android.enable_androidx = True" >> buildozer.spec
        else
          sed -i 's/^android\.enable_androidx = .*/android.enable_androidx = True/' buildozer.spec
        fi
        
        echo "Final buildozer.spec configuration:"
        grep -E "android\.(api|sdk|ndk|minapi|archs|build_tools|enable_androidx)|requirements" buildozer.spec
    
    - name: Build APK using Docker
      working-directory: Android
      run: |
        echo "Building APK using official Kivy buildozer Docker image..."
        echo "Current directory contents:"
        ls -la
        
        # Create output directory
        mkdir -p bin
        
        # Run buildozer in Docker with volume mounts
        docker run --rm \
          -v "$PWD":/home/user/hostcwd \
          -v buildozer-cache:/home/user/.buildozer \
          --workdir /home/user/hostcwd \
          kivy/buildozer:latest \
          android debug
          
        echo "Docker build completed. Searching for APK..."
        
        # Search for APK files in multiple locations
        APK_FILE=""
        
        # Method 1: Look in current directory
        APK_FILE=$(find . -name "*.apk" -type f | head -1)
        
        # Method 2: Look in .buildozer directory
        if [ -z "$APK_FILE" ]; then
          APK_FILE=$(find .buildozer -name "*.apk" -type f 2>/dev/null | head -1)
        fi
        
        # Method 3: Look in bin directory (buildozer default output)
        if [ -z "$APK_FILE" ]; then
          APK_FILE=$(find bin -name "*.apk" -type f 2>/dev/null | head -1)
        fi
        
        if [ -n "$APK_FILE" ]; then
          echo "✅ Found APK: $APK_FILE"
          # Copy to standardized location if not already there
          if [ "$APK_FILE" != "bin/testapp-debug.apk" ]; then
            cp "$APK_FILE" bin/testapp-debug.apk
            echo "✅ Copied APK to bin/testapp-debug.apk"
          fi
          ls -la bin/
          echo "APK size: $(du -h bin/testapp-debug.apk)"
        else
          echo "❌ No APK file found after Docker build"
          echo "Docker build may have failed. Checking directory structure..."
          echo "Current directory:"
          find . -type f -name "*.apk" -o -name "*.log" | head -20
          echo "Buildozer directory:"
          find .buildozer -type f -name "*.apk" -o -name "*.log" 2>/dev/null | head -20 || echo "No .buildozer directory"
          exit 1
        fi
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: android-apk-testapp-docker
        path: Android/bin/testapp-debug.apk
        if-no-files-found: fail