name: Build Android APK
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git unzip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev
        
    - name: Install buildozer dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython
        
    - name: Accept Android licenses (pre-setup)
      run: |
        mkdir -p "$HOME/.android"
        echo '24333f8a63b6825ea9c5514f83c2829b004d1fee' > "$HOME/.android/repositories.cfg"
        
        # Pre-accept all known Android licenses
        mkdir -p "$HOME/.android/licenses"
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$HOME/.android/licenses/android-sdk-license"
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$HOME/.android/licenses/android-sdk-license"
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$HOME/.android/licenses/android-sdk-license"
        
    - name: Build APK  
      working-directory: Android
      run: |
        # Build with single architecture to avoid toolchain conflicts
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: android-apk
        path: Android/bin/*.apk